{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0432\\u0430\\u0434\\u0438\\u043C\\\\Desktop\\\\weather-app\\\\frontend\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.scss';\nimport { useFetchWeather } from \"./hooks/useFetchWeather\";\nimport { useTypedSelector } from \"./hooks/useTypedSelector\";\nimport { useTheme } from \"./hooks/useTheme\";\nimport TodayForecast from \"./components/TodayForecast/TodayForecast\";\nimport Loader from \"./components/Loader/Loader\";\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const city = useTypedSelector(state => state.weather.resolvedAdress);\n  const isLoading = useFetchWeather(city);\n  useTheme();\n  const currentTheme = useTypedSelector(state => state.currentPage.bgColor);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__LoaderWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        marginTop: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: currentTheme === 'gray' ? 'app gray' : 'app blue',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/forecast/:city\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/forecast/:city\",\n            element: /*#__PURE__*/_jsxDEV(TodayForecast, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"9P4yMfqecwgVa6mhBLadrWR+F9c=\", false, function () {\n  return [useTypedSelector, useFetchWeather, useTheme, useTypedSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFetchWeather","useTypedSelector","useTheme","TodayForecast","Loader","BrowserRouter","Navigate","Route","Routes","App","city","state","weather","resolvedAdress","isLoading","currentTheme","currentPage","bgColor"],"sources":["C:/Users/вадим/Desktop/weather-app/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './App.scss';\nimport {useFetchWeather} from \"./hooks/useFetchWeather\";\nimport {useTypedSelector} from \"./hooks/useTypedSelector\";\nimport {useTheme} from \"./hooks/useTheme\";\nimport TodayForecast from \"./components/TodayForecast/TodayForecast\";\nimport Loader from \"./components/Loader/Loader\";\nimport {BrowserRouter, Navigate, Route, Routes} from \"react-router-dom\";\n\nconst App: React.FC = () => {\n    const city: string = useTypedSelector(state => state.weather.resolvedAdress);\n    const isLoading: boolean = useFetchWeather(city);\n    useTheme();\n    const currentTheme: string = useTypedSelector(state => state.currentPage.bgColor);\n    if (isLoading) {\n        return <div className='app__LoaderWrapper'><Loader marginTop={200}/></div>\n    }\n    return (\n        <BrowserRouter>\n            <div className={currentTheme === 'gray' ? 'app gray' : 'app blue'}>\n                <div className='app__wrapper'>\n                    <Routes>\n                        <Route\n                            path=\"*\"\n                            element={<Navigate to=\"/forecast/:city\" replace/>}\n                        />\n                        <Route path=\"/forecast/:city\" element={<TodayForecast/>}/>\n                    </Routes>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,gBAAR,QAA+B,0BAA/B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;;;AAEA,MAAMC,GAAa,GAAG,MAAM;EAAA;;EACxB,MAAMC,IAAY,GAAGT,gBAAgB,CAACU,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,cAAxB,CAArC;EACA,MAAMC,SAAkB,GAAGd,eAAe,CAACU,IAAD,CAA1C;EACAR,QAAQ;EACR,MAAMa,YAAoB,GAAGd,gBAAgB,CAACU,KAAK,IAAIA,KAAK,CAACK,WAAN,CAAkBC,OAA5B,CAA7C;;EACA,IAAIH,SAAJ,EAAe;IACX,oBAAO;MAAK,SAAS,EAAC,oBAAf;MAAA,uBAAoC,QAAC,MAAD;QAAQ,SAAS,EAAE;MAAnB;QAAA;QAAA;QAAA;MAAA;IAApC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBACI,QAAC,aAAD;IAAA,uBACI;MAAK,SAAS,EAAEC,YAAY,KAAK,MAAjB,GAA0B,UAA1B,GAAuC,UAAvD;MAAA,uBACI;QAAK,SAAS,EAAC,cAAf;QAAA,uBACI,QAAC,MAAD;UAAA,wBACI,QAAC,KAAD;YACI,IAAI,EAAC,GADT;YAEI,OAAO,eAAE,QAAC,QAAD;cAAU,EAAE,EAAC,iBAAb;cAA+B,OAAO;YAAtC;cAAA;cAAA;cAAA;YAAA;UAFb;YAAA;YAAA;YAAA;UAAA,QADJ,eAKI,QAAC,KAAD;YAAO,IAAI,EAAC,iBAAZ;YAA8B,OAAO,eAAE,QAAC,aAAD;cAAA;cAAA;cAAA;YAAA;UAAvC;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAvBD;;GAAMN,G;UACmBR,gB,EACMD,e,EAC3BE,Q,EAC6BD,gB;;;KAJ3BQ,G;AAyBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}