{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useActions } from \"./useActions\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionTypes } from \"../redux/types/action-types\";\nexport const useFetchWeather = () => {\n  _s();\n\n  const {\n    fetchWeater\n  } = useActions();\n  const [isActiveModal, setIsActiveModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const fetchWeatherFunc = async () => {\n    try {\n      dispatch({\n        type: ActionTypes.FETCH_WEATHER\n      });\n      const response = await axios.get('https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/dnipro?unitGroup=metric&key=KXLCQFR4Q8PKE8LW86YXF7QWD&contentType=json');\n      const weather = response.data;\n      return fetchWeater(weather);\n    } catch (e) {\n      dispatch({\n        type: ActionTypes.FETCH_WEATHER_ERROR,\n        payload: 'error 404'\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchWeatherFunc();\n  }, []);\n};\n\n_s(useFetchWeather, \"OQsAqTz/qzAKh/mrNWQNhm6qwPo=\", false, function () {\n  return [useActions, useDispatch];\n});","map":{"version":3,"names":["useActions","useEffect","useState","axios","useDispatch","ActionTypes","useFetchWeather","fetchWeater","isActiveModal","setIsActiveModal","dispatch","fetchWeatherFunc","type","FETCH_WEATHER","response","get","weather","data","e","FETCH_WEATHER_ERROR","payload"],"sources":["C:/Users/вадим/Desktop/weather-app/frontend/src/hooks/useFetchWeather.ts"],"sourcesContent":["import {useActions} from \"./useActions\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {IWeather} from \"../redux/reducers/weatherReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ActionTypes} from \"../redux/types/action-types\";\r\n\r\nexport const useFetchWeather = () => {\r\n    const {fetchWeater} = useActions();\r\n    const [isActiveModal,setIsActiveModal] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n    const fetchWeatherFunc = async () => {\r\n        try {\r\n            dispatch({type: ActionTypes.FETCH_WEATHER});\r\n            const response = await axios.get<IWeather>('https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/dnipro?unitGroup=metric&key=KXLCQFR4Q8PKE8LW86YXF7QWD&contentType=json');\r\n            const weather = response.data;\r\n            return fetchWeater(weather);\r\n        } catch (e) {\r\n            dispatch({type: ActionTypes.FETCH_WEATHER_ERROR, payload: 'error 404'});\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchWeatherFunc();\r\n    }, []);\r\n}"],"mappings":";;AAAA,SAAQA,UAAR,QAAyB,cAAzB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;;EACjC,MAAM;IAACC;EAAD,IAAgBP,UAAU,EAAhC;EACA,MAAM,CAACQ,aAAD,EAAeC,gBAAf,IAAmCP,QAAQ,CAAU,KAAV,CAAjD;EACA,MAAMQ,QAAQ,GAAGN,WAAW,EAA5B;;EACA,MAAMO,gBAAgB,GAAG,YAAY;IACjC,IAAI;MACAD,QAAQ,CAAC;QAACE,IAAI,EAAEP,WAAW,CAACQ;MAAnB,CAAD,CAAR;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAoB,4JAApB,CAAvB;MACA,MAAMC,OAAO,GAAGF,QAAQ,CAACG,IAAzB;MACA,OAAOV,WAAW,CAACS,OAAD,CAAlB;IACH,CALD,CAKE,OAAOE,CAAP,EAAU;MACRR,QAAQ,CAAC;QAACE,IAAI,EAAEP,WAAW,CAACc,mBAAnB;QAAwCC,OAAO,EAAE;MAAjD,CAAD,CAAR;IACH;EACJ,CATD;;EAUAnB,SAAS,CAAC,MAAM;IACZU,gBAAgB;EACnB,CAFQ,EAEN,EAFM,CAAT;AAGH,CAjBM;;GAAML,e;UACaN,U,EAELI,W"},"metadata":{},"sourceType":"module"}