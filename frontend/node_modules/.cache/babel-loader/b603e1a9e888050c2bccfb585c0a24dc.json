{"ast":null,"code":"import { ActionTypes } from \"../types/action-types\";\nconst defaultState = {\n  resolvedAdress: 'Kyiv',\n  isLoading: false,\n  error: null\n};\nexport const weatherReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.FETCH_WEATHER_SUCCESS:\n      return { ...state,\n        error: null,\n        isLoading: false,\n        resolvedAdress: action.payload.resolvedAddress,\n        days: action.payload.days,\n        currentState: action.payload.currentConditions\n      };\n\n    case ActionTypes.FETCH_WEATHER_ERROR:\n      return { ...state,\n        error: action.payload,\n        isLoading: true\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","defaultState","resolvedAdress","isLoading","error","weatherReducer","state","action","type","FETCH_WEATHER_SUCCESS","payload","resolvedAddress","days","currentState","currentConditions","FETCH_WEATHER_ERROR"],"sources":["C:/Users/вадим/Desktop/weather-app/frontend/src/redux/reducers/weatherReducer.ts"],"sourcesContent":["import {ActionTypes, IActions} from \"../types/action-types\";\r\n\r\n\r\nexport interface IWeatherDays {\r\n    datetime: string,\r\n    tempmax: number,\r\n    tempmin: number,\r\n    conditions: string\r\n}\r\n\r\nexport interface ICurrentSate {\r\n    temp: string,\r\n    windspeed: number,\r\n    cloudcover: number,\r\n    conditions: string,\r\n    feelslike: number,\r\n    datetimeEpoch:number,\r\n    pressure:number,\r\n}\r\n\r\nexport interface IWeather {\r\n    resolvedAdress: string,\r\n    days?: Array<IWeatherDays>\r\n    currentState?: ICurrentSate,\r\n    isLoading:boolean,\r\n    error?:string|null\r\n}\r\n\r\nconst defaultState: IWeather = {\r\n    resolvedAdress: 'Kyiv',\r\n    isLoading:false,\r\n    error:null\r\n}\r\nexport const weatherReducer = (state = defaultState, action: IActions) => {\r\n    switch (action.type) {\r\n        case ActionTypes.FETCH_WEATHER_SUCCESS:\r\n            return {\r\n                ...state,error:null,isLoading:false, resolvedAdress: action.payload.resolvedAddress,\r\n                days: action.payload.days, currentState: action.payload.currentConditions\r\n            }\r\n            case ActionTypes.FETCH_WEATHER_ERROR: return{...state,error:action.payload,isLoading:true}\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,WAAR,QAAoC,uBAApC;AA4BA,MAAMC,YAAsB,GAAG;EAC3BC,cAAc,EAAE,MADW;EAE3BC,SAAS,EAAC,KAFiB;EAG3BC,KAAK,EAAC;AAHqB,CAA/B;AAKA,OAAO,MAAMC,cAAc,GAAG,YAA4C;EAAA,IAA3CC,KAA2C,uEAAnCL,YAAmC;EAAA,IAArBM,MAAqB;;EACtE,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKR,WAAW,CAACS,qBAAjB;MACI,OAAO,EACH,GAAGH,KADA;QACMF,KAAK,EAAC,IADZ;QACiBD,SAAS,EAAC,KAD3B;QACkCD,cAAc,EAAEK,MAAM,CAACG,OAAP,CAAeC,eADjE;QAEHC,IAAI,EAAEL,MAAM,CAACG,OAAP,CAAeE,IAFlB;QAEwBC,YAAY,EAAEN,MAAM,CAACG,OAAP,CAAeI;MAFrD,CAAP;;IAIA,KAAKd,WAAW,CAACe,mBAAjB;MAAsC,OAAM,EAAC,GAAGT,KAAJ;QAAUF,KAAK,EAACG,MAAM,CAACG,OAAvB;QAA+BP,SAAS,EAAC;MAAzC,CAAN;;IAC1C;MACI,OAAOG,KAAP;EARR;AAUH,CAXM"},"metadata":{},"sourceType":"module"}