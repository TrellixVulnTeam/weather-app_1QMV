{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0432\\u0430\\u0434\\u0438\\u043C\\\\Desktop\\\\weather-app\\\\weather-app\\\\frontend\\\\src\\\\pages\\\\SevenDays\\\\SevenDays.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport Loader from \"../../components/Loader/Loader\";\nimport { useFetchSevenDays } from \"../../hooks/useFetchSevenDays\";\nimport { useNormalDate } from \"../../hooks/useNormalDate\";\nimport './SevenDays.scss';\nimport { useDispatch } from \"react-redux\";\nimport { ActionTypesModal } from \"../../redux/reducers/modalSearchReducer\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ModalSearch from \"../../components/ModalSearch/ModalSearch\";\nimport SevenDaysHeader from \"../../components/SevenDaysHeader/SevenDaysHeader\";\nimport SevenDaysDay from \"../../components/SevenDays-Day/SevenDays-Day\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SevenDays = () => {\n  _s();\n\n  const [isLoading, city, weatherDays] = useFetchSevenDays();\n  const changedCity = useTypedSelector(state => {\n    var _state$weather;\n\n    return (_state$weather = state.weather) === null || _state$weather === void 0 ? void 0 : _state$weather.resolvedAdress;\n  });\n  const [selectedDay, setSelectedDay] = useState(0);\n  const day = useMemo(() => {\n    return weatherDays ? weatherDays[selectedDay] : undefined;\n  }, [weatherDays]);\n  const isOpenModal = useTypedSelector(state => state.modal.isOpen);\n  const dispatch = useDispatch();\n  const date = useNormalDate(day);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__LoaderWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        marginTop: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sevenDays\",\n    children: [isOpenModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      onClick: () => dispatch({\n        type: ActionTypesModal.modalClose\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 28\n    }, this) : '', /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: isOpenModal,\n      unmountOnExit: true,\n      mountOnEnter: true,\n      timeout: 350,\n      classNames: \"my-modal\",\n      children: /*#__PURE__*/_jsxDEV(ModalSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SevenDaysHeader, {\n      city: changedCity || city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SevenDaysDay, {\n      day: day,\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SevenDays, \"VMnANGfz7hHqJbiSt+8x42At36E=\", false, function () {\n  return [useFetchSevenDays, useTypedSelector, useTypedSelector, useDispatch, useNormalDate];\n});\n\n_c = SevenDays;\nexport default SevenDays;\n\nvar _c;\n\n$RefreshReg$(_c, \"SevenDays\");","map":{"version":3,"names":["React","useMemo","useState","Loader","useFetchSevenDays","useNormalDate","useDispatch","ActionTypesModal","useTypedSelector","CSSTransition","ModalSearch","SevenDaysHeader","SevenDaysDay","SevenDays","isLoading","city","weatherDays","changedCity","state","weather","resolvedAdress","selectedDay","setSelectedDay","day","undefined","isOpenModal","modal","isOpen","dispatch","date","type","modalClose"],"sources":["C:/Users/вадим/Desktop/weather-app/weather-app/frontend/src/pages/SevenDays/SevenDays.tsx"],"sourcesContent":["import React, {useMemo, useState} from 'react';\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {useFetchSevenDays} from \"../../hooks/useFetchSevenDays\";\r\nimport {useNormalDate} from \"../../hooks/useNormalDate\";\r\nimport './SevenDays.scss';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ActionTypesModal} from \"../../redux/reducers/modalSearchReducer\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport ModalSearch from \"../../components/ModalSearch/ModalSearch\";\r\nimport SevenDaysHeader from \"../../components/SevenDaysHeader/SevenDaysHeader\";\r\nimport SevenDaysDay from \"../../components/SevenDays-Day/SevenDays-Day\";\r\n\r\nconst SevenDays = () => {\r\n    const [isLoading, city, weatherDays] = useFetchSevenDays();\r\n    const changedCity = useTypedSelector(state=>state.weather?.resolvedAdress);\r\n    const [selectedDay, setSelectedDay] = useState<number>(0);\r\n    \r\n    const day = useMemo(()=>{\r\n         return weatherDays ? weatherDays[selectedDay] : undefined;\r\n    },[weatherDays]);\r\n    const isOpenModal = useTypedSelector(state => state.modal.isOpen);\r\n    const dispatch = useDispatch();\r\n    const date = useNormalDate(day);\r\n    if (isLoading) {\r\n        return <div className='app__LoaderWrapper'><Loader marginTop={200}/></div>\r\n    }\r\n    return (\r\n        <div className='sevenDays'>\r\n            {isOpenModal ? <div className=\"background\" onClick=\r\n                {() => dispatch({type: ActionTypesModal.modalClose})}></div> : ''}\r\n            <CSSTransition in={isOpenModal} unmountOnExit mountOnEnter\r\n                           timeout={350} classNames='my-modal'>\r\n                <ModalSearch/>\r\n            </CSSTransition>\r\n            <SevenDaysHeader city={changedCity||city}/>\r\n            <SevenDaysDay day={day} date={date}/>\r\n            {}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SevenDays;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,OAAO,kBAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,gBAAR,QAA+B,yCAA/B;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,WAAlB,IAAiCZ,iBAAiB,EAAxD;EACA,MAAMa,WAAW,GAAGT,gBAAgB,CAACU,KAAK;IAAA;;IAAA,yBAAEA,KAAK,CAACC,OAAR,mDAAE,eAAeC,cAAjB;EAAA,CAAN,CAApC;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAS,CAAT,CAA9C;EAEA,MAAMqB,GAAG,GAAGtB,OAAO,CAAC,MAAI;IACnB,OAAOe,WAAW,GAAGA,WAAW,CAACK,WAAD,CAAd,GAA8BG,SAAhD;EACJ,CAFkB,EAEjB,CAACR,WAAD,CAFiB,CAAnB;EAGA,MAAMS,WAAW,GAAGjB,gBAAgB,CAACU,KAAK,IAAIA,KAAK,CAACQ,KAAN,CAAYC,MAAtB,CAApC;EACA,MAAMC,QAAQ,GAAGtB,WAAW,EAA5B;EACA,MAAMuB,IAAI,GAAGxB,aAAa,CAACkB,GAAD,CAA1B;;EACA,IAAIT,SAAJ,EAAe;IACX,oBAAO;MAAK,SAAS,EAAC,oBAAf;MAAA,uBAAoC,QAAC,MAAD;QAAQ,SAAS,EAAE;MAAnB;QAAA;QAAA;QAAA;MAAA;IAApC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,WACKW,WAAW,gBAAG;MAAK,SAAS,EAAC,YAAf;MAA4B,OAAO,EAC7C,MAAMG,QAAQ,CAAC;QAACE,IAAI,EAAEvB,gBAAgB,CAACwB;MAAxB,CAAD;IADJ;MAAA;MAAA;MAAA;IAAA,QAAH,GACuD,EAFvE,eAGI,QAAC,aAAD;MAAe,EAAE,EAAEN,WAAnB;MAAgC,aAAa,MAA7C;MAA8C,YAAY,MAA1D;MACe,OAAO,EAAE,GADxB;MAC6B,UAAU,EAAC,UADxC;MAAA,uBAEI,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QAHJ,eAOI,QAAC,eAAD;MAAiB,IAAI,EAAER,WAAW,IAAEF;IAApC;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI,QAAC,YAAD;MAAc,GAAG,EAAEQ,GAAnB;MAAwB,IAAI,EAAEM;IAA9B;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CA3BD;;GAAMhB,S;UACqCT,iB,EACnBI,gB,EAMAA,gB,EACHF,W,EACJD,a;;;KAVXQ,S;AA6BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}