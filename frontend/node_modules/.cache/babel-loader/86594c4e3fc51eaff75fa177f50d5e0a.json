{"ast":null,"code":"export let UserActions;\n\n(function (UserActions) {\n  UserActions[\"login\"] = \"login\";\n  UserActions[\"logout\"] = \"logout\";\n  UserActions[\"addCity\"] = \"addCity\";\n})(UserActions || (UserActions = {}));\n\nconst defaultState = {\n  login: null,\n  email: null,\n  token: null,\n  cities: null,\n  isAuthed: false\n};\nexport const UserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UserActions.login:\n      return { ...state,\n        login: action.payload.login,\n        email: action.payload.email,\n        token: action.payload.token,\n        isAuthed: true\n      };\n\n    case UserActions.addCity:\n      return { ...state,\n        cities: action.payload.cities\n      };\n\n    case UserActions.logout:\n      return { ...state,\n        login: null,\n        email: null,\n        token: null,\n        cities: null,\n        isAuthed: false\n      };\n\n    default:\n      return state;\n  }\n};\n_c = UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"names":["UserActions","defaultState","login","email","token","cities","isAuthed","UserReducer","state","action","type","payload","addCity","logout"],"sources":["C:/Users/вадим/Desktop/weather-app/frontend/src/redux/reducers/userReducer.ts"],"sourcesContent":["export enum UserActions {\r\n    login = 'login',\r\n    logout = 'logout',\r\n    addCity = 'addCity'\r\n}\r\n\r\nexport interface IUserActions {\r\n    type: UserActions,\r\n    payload: any\r\n}\r\n\r\ninterface IDefaultState {\r\n    login: string | null,\r\n    email: string | null,\r\n    token: string | null,\r\n    cities: Array<string> | null,\r\n    isAuthed: boolean\r\n}\r\n\r\nconst defaultState: IDefaultState = {\r\n    login: null,\r\n    email: null,\r\n    token: null,\r\n    cities: null,\r\n    isAuthed: false\r\n}\r\nexport const UserReducer = (state = defaultState, action: IUserActions) => {\r\n    switch (action.type) {\r\n        case UserActions.login:\r\n            return {\r\n                ...state, login: action.payload.login, email: action.payload.email,\r\n                token: action.payload.token, isAuthed: true\r\n            };\r\n        case UserActions.addCity:\r\n            return {...state, cities: action.payload.cities};\r\n        case UserActions.logout:\r\n            return {\r\n                ...state, login: null, email: null,\r\n                token: null, cities: null, isAuthed: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"],"mappings":"AAAA,WAAYA,WAAZ;;WAAYA,W;EAAAA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AAmBZ,MAAMC,YAA2B,GAAG;EAChCC,KAAK,EAAE,IADyB;EAEhCC,KAAK,EAAE,IAFyB;EAGhCC,KAAK,EAAE,IAHyB;EAIhCC,MAAM,EAAE,IAJwB;EAKhCC,QAAQ,EAAE;AALsB,CAApC;AAOA,OAAO,MAAMC,WAAW,GAAG,YAAgD;EAAA,IAA/CC,KAA+C,uEAAvCP,YAAuC;EAAA,IAAzBQ,MAAyB;;EACvE,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKV,WAAW,CAACE,KAAjB;MACI,OAAO,EACH,GAAGM,KADA;QACON,KAAK,EAAEO,MAAM,CAACE,OAAP,CAAeT,KAD7B;QACoCC,KAAK,EAAEM,MAAM,CAACE,OAAP,CAAeR,KAD1D;QAEHC,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KAFnB;QAE0BE,QAAQ,EAAE;MAFpC,CAAP;;IAIJ,KAAKN,WAAW,CAACY,OAAjB;MACI,OAAO,EAAC,GAAGJ,KAAJ;QAAWH,MAAM,EAAEI,MAAM,CAACE,OAAP,CAAeN;MAAlC,CAAP;;IACJ,KAAKL,WAAW,CAACa,MAAjB;MACI,OAAO,EACH,GAAGL,KADA;QACON,KAAK,EAAE,IADd;QACoBC,KAAK,EAAE,IAD3B;QAEHC,KAAK,EAAE,IAFJ;QAEUC,MAAM,EAAE,IAFlB;QAEwBC,QAAQ,EAAE;MAFlC,CAAP;;IAIJ;MACI,OAAOE,KAAP;EAdR;AAgBH,CAjBM;KAAMD,W"},"metadata":{},"sourceType":"module"}