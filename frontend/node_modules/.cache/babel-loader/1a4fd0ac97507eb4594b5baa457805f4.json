{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0432\\u0430\\u0434\\u0438\\u043C\\\\Desktop\\\\weather-app\\\\frontend\\\\src\\\\components\\\\TodayForecast\\\\TodayForecast.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport './TodayForecast.scss';\nimport sun from '../../assets/sun.png';\nimport cloud from '../../assets/cloud.png';\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodayForecast = () => {\n  _s();\n\n  const currentWeatherState = useTypedSelector(state => {\n    var _state$weather;\n\n    return (_state$weather = state.weather) === null || _state$weather === void 0 ? void 0 : _state$weather.currentState;\n  });\n  const currentCity = useTypedSelector(state => {\n    var _state$weather2;\n\n    return (_state$weather2 = state.weather) === null || _state$weather2 === void 0 ? void 0 : _state$weather2.resolvedAdress;\n  });\n  const daysLong = [{\n    dayShort: 'Mon',\n    dayLong: 'Monday'\n  }, {\n    dayShort: 'Tue',\n    dayLong: 'Tuesday'\n  }, {\n    dayShort: 'Wed',\n    dayLong: 'Wednesday'\n  }, {\n    dayShort: 'Thu',\n    dayLong: 'Thursday'\n  }, {\n    dayShort: 'Fri',\n    dayLong: 'Friday'\n  }, {\n    dayShort: 'Sat',\n    dayLong: 'Saturday'\n  }, {\n    dayShort: 'Sun',\n    dayLong: 'Sunday'\n  }];\n\n  function getLongDay(daySh) {\n    return daysLong.filter(day => day.dayShort === daySh)[0].dayLong;\n  }\n\n  const date = useMemo(() => {\n    console.log(1);\n    if ((currentWeatherState === null || currentWeatherState === void 0 ? void 0 : currentWeatherState.datetimeEpoch) === undefined) return '';\n    let fullDate = String(new Date((currentWeatherState === null || currentWeatherState === void 0 ? void 0 : currentWeatherState.datetimeEpoch) * 1000)).split('202')[0];\n    const day = getLongDay(fullDate.split(' ')[0]);\n    const newFullDate = fullDate.replace(fullDate.split(' ')[0], day);\n    return newFullDate.split(' ')[0] + ' ' + newFullDate.split(' ')[2] + ' ' + newFullDate.split(' ')[1];\n  }, [currentWeatherState === null || currentWeatherState === void 0 ? void 0 : currentWeatherState.datetimeEpoch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__todayWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__city\",\n      children: currentCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__changeBtn\",\n      children: [\"Change \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"app__burger-menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__imgWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: (currentWeatherState === null || currentWeatherState === void 0 ? void 0 : currentWeatherState.conditions) !== 'Clear' ? cloud : sun,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__someInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__temp\",\n        children: currentWeatherState === null || currentWeatherState === void 0 ? void 0 : currentWeatherState.temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__conditions\",\n        children: currentWeatherState === null || currentWeatherState === void 0 ? void 0 : currentWeatherState.conditions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__highestTemp\",\n        children: currentWeatherState === null || currentWeatherState === void 0 ? void 0 : currentWeatherState.conditions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__date\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__addInfo\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodayForecast, \"ZS49+yHsCmzCRHcbyUguydHgj7I=\", false, function () {\n  return [useTypedSelector, useTypedSelector];\n});\n\n_c = TodayForecast;\nexport default TodayForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayForecast\");","map":{"version":3,"names":["React","useMemo","sun","cloud","useTypedSelector","TodayForecast","currentWeatherState","state","weather","currentState","currentCity","resolvedAdress","daysLong","dayShort","dayLong","getLongDay","daySh","filter","day","date","console","log","datetimeEpoch","undefined","fullDate","String","Date","split","newFullDate","replace","conditions","temp"],"sources":["C:/Users/вадим/Desktop/weather-app/frontend/src/components/TodayForecast/TodayForecast.tsx"],"sourcesContent":["import React, {FC, useMemo} from 'react';\r\nimport './TodayForecast.scss';\r\nimport sun from '../../assets/sun.png';\r\nimport cloud from '../../assets/cloud.png';\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {ICurrentSate} from \"../../redux/reducers/weatherReducer\";\r\n\r\nconst TodayForecast: FC = () => {\r\n    const currentWeatherState: ICurrentSate = useTypedSelector(state => state.weather?.currentState);\r\n    const currentCity: string = useTypedSelector(state => state.weather?.resolvedAdress);\r\n    const daysLong = [{dayShort: 'Mon', dayLong: 'Monday'}, {dayShort: 'Tue', dayLong: 'Tuesday'},\r\n        {dayShort: 'Wed', dayLong: 'Wednesday'}, {dayShort: 'Thu', dayLong: 'Thursday'}, {\r\n            dayShort: 'Fri',\r\n            dayLong: 'Friday'\r\n        },\r\n        {dayShort: 'Sat', dayLong: 'Saturday'}, {dayShort: 'Sun', dayLong: 'Sunday'}];\r\n\r\n    function getLongDay(daySh: string) {\r\n        return daysLong.filter(day => day.dayShort === daySh)[0].dayLong\r\n    }\r\n\r\n    const date = useMemo<string>(() => {\r\n        console.log(1);\r\n        if(currentWeatherState?.datetimeEpoch===undefined) return '';\r\n        let fullDate: string = String(new Date(currentWeatherState?.datetimeEpoch * 1000)).split('202')[0];\r\n        const day: string = getLongDay(fullDate.split(' ')[0]);\r\n        const newFullDate: string = fullDate.replace(fullDate.split(' ')[0], day);\r\n        return newFullDate.split(' ')[0] + ' ' +\r\n            newFullDate.split(' ')[2] + ' ' +\r\n            newFullDate.split(' ')[1];\r\n    }, [currentWeatherState?.datetimeEpoch]);\r\n    return (\r\n        <div className='app__todayWrapper'>\r\n            <div className=\"app__city\">{currentCity}</div>\r\n            <div className='app__changeBtn'>Change <span className='app__burger-menu'></span></div>\r\n            <div className=\"app__imgWrapper\">\r\n                <img src={currentWeatherState?.conditions !== 'Clear' ? cloud : sun} alt=\"\"/>\r\n            </div>\r\n            <div className='app__someInfo'>\r\n                <div className='app__temp'>{currentWeatherState?.temp}</div>\r\n                <div className='app__conditions'>{currentWeatherState?.conditions}</div>\r\n                <div className='app__highestTemp'>{currentWeatherState?.conditions}</div>\r\n            </div>\r\n            <div className='app__date'>{date}</div>\r\n            <div className='app__addInfo'>{date}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodayForecast;"],"mappings":"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"},"metadata":{},"sourceType":"module"}