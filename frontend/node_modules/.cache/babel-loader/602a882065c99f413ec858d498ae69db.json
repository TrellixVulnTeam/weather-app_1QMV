{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0432\\u0430\\u0434\\u0438\\u043C\\\\Desktop\\\\weather-app\\\\weather-app\\\\frontend\\\\src\\\\components\\\\ModalSearch\\\\ModalSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Loader from \"../Loader/Loader\";\nimport { TextField } from \"@mui/material\";\nimport { WeatherApi } from \"../../API/WeatherApi\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionTypesModal } from \"../../redux/reducers/modalSearchReducer\";\nimport './ModalSearch.scss';\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport MyButton from \"../UI/MyButton/MyButton\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalSearch = () => {\n  _s();\n\n  const {\n    fetchWeather\n  } = useActions();\n  const dispatch = useDispatch();\n  const [searchValue, setSearchValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isAuthed = useTypedSelector(state => state.user.isAuthed);\n  const [loginOpen, setLoginOpen] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location.pathname.split('/'));\n\n  const searchWeatherHandler = async () => {\n    try {\n      setIsLoading(true);\n      const weather = await WeatherApi.getWeatherByCity(searchValue);\n      dispatch({\n        type: ActionTypesModal.modalClose\n      });\n      setIsLoading(false);\n      navigate('/forecast/' + searchValue, {\n        replace: true\n      });\n      return fetchWeather(weather);\n    } catch (e) {\n      setIsLoading(false);\n      dispatch({\n        type: ActionTypesModal.modalClose\n      });\n      return console.log(e);\n    }\n  };\n\n  const loginBtnClick = () => {\n    dispatch({\n      type: ActionTypesModal.modalClose\n    });\n    setLoginOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__my-modal\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__form\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"modal__closeBtn\",\n          onClick: () => dispatch({\n            type: ActionTypesModal.modalClose\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"muiInput\",\n          value: searchValue,\n          id: \"standard-basic\",\n          label: \"City\",\n          variant: \"standard\",\n          onChange: e => setSearchValue(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          classnameBtn: \"app__modalConfirmButton myButton\",\n          onClick: searchWeatherHandler,\n          children: \" Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), isAuthed ? '' : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__modalLoginForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"app__modalLoginFormText\",\n            children: \"Login to see your history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            classnameBtn: \"loginBtn\",\n            onClick: loginBtnClick,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalSearch, \"XObYpjr9h1MgUKpQUs7IWC0X3f4=\", false, function () {\n  return [useActions, useDispatch, useTypedSelector, useNavigate, useLocation];\n});\n\n_c = ModalSearch;\nexport default ModalSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalSearch\");","map":{"version":3,"names":["React","useState","Loader","TextField","WeatherApi","useActions","useDispatch","ActionTypesModal","useTypedSelector","MyButton","useLocation","useNavigate","ModalSearch","fetchWeather","dispatch","searchValue","setSearchValue","isLoading","setIsLoading","isAuthed","state","user","loginOpen","setLoginOpen","navigate","location","console","log","pathname","split","searchWeatherHandler","weather","getWeatherByCity","type","modalClose","replace","e","loginBtnClick","stopPropagation","target","value"],"sources":["C:/Users/вадим/Desktop/weather-app/weather-app/frontend/src/components/ModalSearch/ModalSearch.tsx"],"sourcesContent":["import React, {FC, useState} from 'react';\r\nimport Loader from \"../Loader/Loader\";\r\nimport {TextField} from \"@mui/material\";\r\nimport {WeatherApi} from \"../../API/WeatherApi\";\r\nimport {useActions} from \"../../hooks/useActions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {ActionTypesModal} from \"../../redux/reducers/modalSearchReducer\";\r\nimport './ModalSearch.scss';\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport MyButton from \"../UI/MyButton/MyButton\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst ModalSearch: FC = () => {\r\n    const {fetchWeather} = useActions();\r\n    const dispatch = useDispatch();\r\n    const [searchValue, setSearchValue] = useState<string>('');\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const isAuthed = useTypedSelector(state => state.user.isAuthed);\r\n    const [loginOpen, setLoginOpen] = useState<boolean>(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    console.log(location.pathname.split('/'))\r\n    const searchWeatherHandler = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const weather = await WeatherApi.getWeatherByCity(searchValue);\r\n            dispatch({type: ActionTypesModal.modalClose});\r\n            setIsLoading(false);\r\n            navigate('/forecast/'+searchValue,{replace:true});\r\n            return fetchWeather(weather);\r\n        } catch (e) {\r\n            setIsLoading(false);\r\n            dispatch({type: ActionTypesModal.modalClose});\r\n            return console.log(e);\r\n        }\r\n    }\r\n    const loginBtnClick = () => {\r\n        dispatch({type: ActionTypesModal.modalClose});\r\n        setLoginOpen(true);\r\n    }\r\n    return (\r\n        <div className='app__my-modal'>\r\n            {isLoading ? <Loader/> :\r\n                <>\r\n                    <div className='modal__form' onClick={(e) => e.stopPropagation()}>\r\n                            <span className='modal__closeBtn'\r\n                                  onClick={() => dispatch({type: ActionTypesModal.modalClose})}\r\n                            ></span>\r\n                        <TextField className='muiInput' value={searchValue}\r\n                                   id=\"standard-basic\" label=\"City\"\r\n                                   variant=\"standard\"\r\n                                   onChange={(e) => setSearchValue(e.target.value)}\r\n                                   type=\"text\"/>\r\n                        <MyButton classnameBtn='app__modalConfirmButton myButton'\r\n                                  onClick={searchWeatherHandler}> Confirm\r\n                        </MyButton>\r\n                        {isAuthed ? '' : <div className='app__modalLoginForm'>\r\n                            <span className='app__modalLoginFormText'>Login to see your history</span>\r\n                            <MyButton classnameBtn='loginBtn' onClick={loginBtnClick}>Login</MyButton>\r\n                        </div>}\r\n                    </div>\r\n                </>}\r\n        </div>);\r\n};\r\n\r\nexport default ModalSearch;"],"mappings":"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"},"metadata":{},"sourceType":"module"}