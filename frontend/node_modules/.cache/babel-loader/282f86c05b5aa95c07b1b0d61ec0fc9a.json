{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0432\\u0430\\u0434\\u0438\\u043C\\\\Desktop\\\\weather-app\\\\frontend\\\\src\\\\pages\\\\TodayForecast\\\\TodayForecast.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './TodayForecast.scss';\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { ActionTypesModal } from \"../../redux/reducers/modalSearchReducer\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useFetchWeather } from \"../../hooks/useFetchWeather\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"../../components/Loader/Loader\";\nimport ModalSearch from \"../../components/ModalSearch/ModalSearch\";\nimport TodayWeather from \"../../components/TodayWeather/TodayWeather\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodayForecast = () => {\n  _s();\n\n  const isOpenModal = useTypedSelector(state => state.modal.isOpen);\n  const currentCity = useTypedSelector(state => {\n    var _state$weather;\n\n    return (_state$weather = state.weather) === null || _state$weather === void 0 ? void 0 : _state$weather.resolvedAdress;\n  });\n\n  const openModalMenu = () => {\n    dispatch({\n      type: ActionTypesModal.modalOpen\n    });\n  };\n\n  const params = useParams();\n  const defaultCity = useTypedSelector(state => state.weather.resolvedAdress);\n  const city = params.city || defaultCity;\n  const navigate = useNavigate();\n\n  const redirectSevenDays = () => {\n    navigate(`/7days/${city}`, {\n      replace: true\n    });\n  };\n\n  const isLoading = useFetchWeather(city);\n  const dispatch = useDispatch();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__LoaderWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        marginTop: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__todayWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__city\",\n      children: currentCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__changeBtn smallButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openModalMenu,\n        children: [\"Change \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"app__burger-menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isOpenModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      onClick: () => dispatch({\n        type: ActionTypesModal.modalClose\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this) : '', /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: isOpenModal,\n      unmountOnExit: true,\n      mountOnEnter: true,\n      timeout: 350,\n      classNames: \"my-modal\",\n      children: /*#__PURE__*/_jsxDEV(ModalSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodayWeather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"app__redirectButton smallButton\",\n      onClick: redirectSevenDays,\n      children: \"7 days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodayForecast, \"6Y8XUZUY8Z6lOPCivMsVsX9g4a0=\", false, function () {\n  return [useTypedSelector, useTypedSelector, useParams, useTypedSelector, useNavigate, useFetchWeather, useDispatch];\n});\n\n_c = TodayForecast;\nexport default TodayForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodayForecast\");","map":{"version":3,"names":["React","useTypedSelector","ActionTypesModal","useNavigate","useParams","useFetchWeather","useDispatch","Loader","ModalSearch","TodayWeather","CSSTransition","TodayForecast","isOpenModal","state","modal","isOpen","currentCity","weather","resolvedAdress","openModalMenu","dispatch","type","modalOpen","params","defaultCity","city","navigate","redirectSevenDays","replace","isLoading","modalClose"],"sources":["C:/Users/вадим/Desktop/weather-app/frontend/src/pages/TodayForecast/TodayForecast.tsx"],"sourcesContent":["import React, {FC} from 'react';\r\nimport './TodayForecast.scss';\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {ActionTypesModal} from \"../../redux/reducers/modalSearchReducer\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {useFetchWeather} from \"../../hooks/useFetchWeather\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ModalSearch from \"../../components/ModalSearch/ModalSearch\";\r\nimport TodayWeather from \"../../components/TodayWeather/TodayWeather\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\n\r\n\r\nconst TodayForecast: FC = () => {\r\n    const isOpenModal = useTypedSelector(state => state.modal.isOpen);\r\n    const currentCity: string = useTypedSelector(state => state.weather?.resolvedAdress);\r\n    const openModalMenu = () => {\r\n        dispatch({type: ActionTypesModal.modalOpen})\r\n    }\r\n    type IParamsWeather = {\r\n        city: string\r\n    }\r\n    const params = useParams<IParamsWeather>();\r\n    const defaultCity:string = useTypedSelector(state => state.weather.resolvedAdress);\r\n    const city: string = params.city || defaultCity;\r\n    const navigate = useNavigate();\r\n    const redirectSevenDays = ()=>{\r\n        navigate(`/7days/${city}`,{replace:true});\r\n    }\r\n    const isLoading: boolean = useFetchWeather(city);\r\n    const dispatch = useDispatch();\r\n    if (isLoading) {\r\n        return <div className='app__LoaderWrapper'><Loader marginTop={200}/></div>\r\n    }\r\n    return (\r\n        <div className='app__todayWrapper'>\r\n            <div className=\"app__city\">{currentCity}</div>\r\n            <div className='app__changeBtn smallButton'>\r\n                <button onClick={openModalMenu}>Change <span\r\n                    className='app__burger-menu'></span></button>\r\n            </div>\r\n            {isOpenModal ? <div className=\"background\" onClick=\r\n                {() => dispatch({type: ActionTypesModal.modalClose})}></div> : ''}\r\n            <CSSTransition in={isOpenModal} unmountOnExit mountOnEnter\r\n                           timeout={350} classNames='my-modal'>\r\n                <ModalSearch/>\r\n            </CSSTransition>\r\n            <TodayWeather/>\r\n            <button className='app__redirectButton smallButton' onClick={redirectSevenDays}>7 days</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodayForecast;"],"mappings":"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"},"metadata":{},"sourceType":"module"}